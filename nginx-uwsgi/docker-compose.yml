version: '2'

services:
  # Task Broker
  rabbit:
    image: rabbitmq:3.6.6-management
    env_file: dev.env
    ports:
      - "5672"
      - "15672"

  # Flask Images/Controller/View/Worker Layers
  uwsgi:
    image: flask_base:latest
    env_file: dev.env
    volumes:
      - ./uwsgi.ini:/uwsgi/uwsgi.ini
      - ../app:/var/www/app
      - ../instance:/var/www/instance
      - ../static:/var/www//static
      - ../templates:/var/www/templates
      - asset-volume:/tmp
    depends_on:
      - postgres
    working_dir: /uwsgi
    command: uwsgi --thunder-lock --ini /uwsgi/uwsgi.ini
    restart: always

  worker:
    image: flask_base:latest
    env_file: dev.env
    volumes_from:
      - uwsgi
    depends_on:
      - rabbit
    working_dir: /var/www
    command: celery -A app.celery worker --beat -l debug

  flower:
    image: flask_base:latest
    env_file: dev.env
    volumes_from:
      - uwsgi
    depends_on:
      - rabbit
    ports:
      - "5555"
    working_dir: /var/www
    command: celery flower -A app.celery

  # Data Layers
  data:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes:
      - /var/lib/postgresql
    command: "true"

  postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes_from:
      - data
    ports:
      - "5432"

  # Reverse proxy LB
  proxy:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./uwsgi_params:/etc/nginx/uwsgi_params
      - ../instance:/var/www/instance
      - asset-volume:/tmp
    links:
      - uwsgi
      - flower
    ports:
      - "80:80"
      - "443:443"
      - "5555:5555"
    command: nginx -c nginx.conf
    restart: always

# Shared volume exposes sockets/pid files
volumes:
  asset-volume: