version: '2'

services:
  # Reverse proxy LB
  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    links:
      - website
      - flower
    volumes_from:
      - website:ro
    ports:
      - "80:80"
      - "443:443"
    command: nginx -c nginx.conf
    restart: always

  # Task Broker
  rabbit:
    image: rabbitmq:latest
    env_file: app.env

  # Flask Images/Controller/View/Worker Layers
  website:
    build:
      context: .
      dockerfile: ./flask/Dockerfile
    env_file: app.env
    volumes:
      - ../backend:/var/www/backend
      - ../tmp:/var/www/tmp
    depends_on:
      - postgres
    command: python wsgi.py --ini uwsgi.ini
    restart: always

  celeryworker:
    build:
      context: .
      dockerfile: ./flask/Dockerfile
    env_file: app.env
    volumes_from:
      - website
    depends_on:
      - rabbit
    command: celery -A backend.celery worker -l info

  celerybeat:
    build:
      context: .
      dockerfile: ./flask/Dockerfile
    env_file: app.env
    volumes_from:
      - website
    depends_on:
      - rabbit
    command: celery -A backend.celery beat -l info

  flower:
    build:
      context: .
      dockerfile: ./flask/Dockerfile
    env_file: app.env
    volumes_from:
      - website
    depends_on:
      - rabbit
    ports:
      - "5555:5555"
    command: celery -A backend.celery flower

  # Data Layer
  dbdata:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes:
      - /var/lib/postgresql
    command: "true"

  postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes_from:
      - dbdata
    ports:
      - "5432"
