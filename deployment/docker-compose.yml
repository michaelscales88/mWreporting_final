version: '2'

services:
  website:
    build:
      context: .
      dockerfile: ./flask/Dockerfile
    env_file: app.env
    volumes:
      - ../app:/var/www/app
      - ../tmp:/var/www/tmp
    ports:
      - "5000:5000"
    depends_on:
      - postgres
#    command: uwsgi --ini uwsgi.ini
    command: sh /var/www/run.sh
    restart: always

#  nginx:
#    build:
#      context: .
#      dockerfile: ./nginx/Dockerfile
#    links:
#      - website
#      - flower
#    volumes_from:
#      - website:ro
#    ports:
#      - "80:80"
#      - "443:443"
#    command: nginx -c nginx.conf
#    restart: always

  rabbit:
    image: rabbitmq:latest
    env_file: app.env

  celeryworker:
    build:
      context: .
      dockerfile: ./celery/Dockerfile
    env_file: app.env
    volumes_from:
      - website
    depends_on:
      - rabbit
    command: sh /var/www/run_worker.sh

  celerybeat:
    build:
      context: .
      dockerfile: ./celery/Dockerfile
    env_file: app.env
    volumes_from:
      - website
    depends_on:
      - rabbit
    command: sh /var/www/run_beat.sh

  flower:
    build:
      context: .
      dockerfile: ./celery/Dockerfile
    env_file: app.env
    volumes_from:
      - website
    depends_on:
      - rabbit
    ports:
    - "5555:5555"
    command: sh /var/www/run_flower.sh

  dbdata:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes:
      - /var/lib/postgresql
    command: "true"

  postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes_from:
      - dbdata
    ports:
      - "5432:5432"
