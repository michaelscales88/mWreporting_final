version: '2'

services:
  # Task Broker
  rabbit:
    image: rabbitmq:latest
    env_file: app.env

  # Flask Images/Controller/View/Worker Layers
  app:
    build:
      context: ./flask
      dockerfile: Dockerfile
    env_file: app.env
    volumes:
      - ./flask/uwsgi.ini:/var/www/uwsgi.ini
      - ./flask/wsgi.py:/var/www/wsgi.py
      - ../backend:/var/www/backend
      - ../instance:/var/www/instance
      - ../static:/var/www/static
    depends_on:
      - postgres
    expose:
      - "5000"
    command: python wsgi.py --ini uwsgi.ini
    restart: always

  worker:
    build:
      context: ./flask
      dockerfile: Dockerfile
    env_file: app.env
    volumes_from:
      - app
    depends_on:
      - rabbit
    command: celery -A backend.celery worker -l info

  beat:
    build:
      context: ./flask
      dockerfile: Dockerfile
    env_file: app.env
    volumes_from:
      - app
    depends_on:
      - rabbit
    command: celery -A backend.celery beat -l info

  flower:
    build:
      context: ./flask
      dockerfile: Dockerfile
    env_file: app.env
    volumes_from:
      - app
    depends_on:
      - rabbit
    ports:
      - "5555"
    command: celery -A backend.celery flower

  # Data Layers
  data:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes:
      - /var/lib/postgresql
    command: "true"

  postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    volumes_from:
      - data
    ports:
      - "5432"

  # Reverse proxy LB
  proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
    links:
      - app
      - flower
    ports:
      - "80:80"
      - "5555:5555"
    command: nginx -c nginx.conf
    restart: always